<content>
    <section>
        <carousel urls={ state.urls } duration={ state.duration } mode={ state.mode } toggle-playback={ togglePlayback } set-error={ setError } error={ state.error } set-server-stop={ setServerStop } set-server-resume={ setServerResume }></carousel>
    </section>
    <section>
        <settings set-url-list={ setUrlList } set-error={ setError } options={ props.options }></settings>
    </section>
    <script>
        import Carousel from '../carousel/carousel.riot';
        import Settings from '../settings/settings.riot';
        import IconButton from '../components/icon-button/icon-button.riot';
        import nanoajax from 'nanoajax';

        export default {
            components: {
                Carousel,
                Settings,
                IconButton,
            },
            onBeforeMount() {
                this.state.urls = [];
                this.state.duration = 3000;
                this.state.mode = 'play';
            },
            onMounted() {
                if (this.props.options.slideDuration) {
                    this.update({ duration: this.props.options.slideDuration });
                }
            },
            errorHandler(e) {
            },
            setError(error) {
                this.update({
                    error,
                    mode: 'error',
                });
            },
            setUrlList(urlList) {
                this.update({
                    mode: 'play',
                    error: '',
                    urls: urlList
                });
            },
            setServerStop() {
                this.update({
                    mode: 'stop',
                    error: '',
                });
            },
            setServerResume() {
                this.update({
                    mode: 'play',
                    error: '',
                });
            },
            togglePlayback(e) {
                e.preventDefault();
                switch (this.state.mode) {
                    case 'play':
                        this.update({ mode: 'pause' });
                        break;
                    case 'pause':
                    case 'error':
                        this.update({
                            mode: 'play',
                            error: '',
                        });
                        break;
                    default:
                        // Do nothing, for example if stopped
                        break;
                }
            },
        };
    </script>
</content>
